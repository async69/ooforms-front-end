{"version":3,"sources":["data.ts","constants/endPoints.ts","Query.ts","App.tsx","actions.ts","index.tsx"],"names":["rows","FetchWithFiltersBody","ADD_DATE","CARRIER_OPERATION","DRIVER_TOTAL","NBR_POWER_UNIT","PC_FLAG","PHY_STATE","PAGE_NUMBER","query","to","from","useState","startDate","endDate","state","setState","responseData","setResponseData","className","placeholder","type","onChange","value","currentTarget","Number","onClick","callback","err","data","Axios","post","endPoints","then","res","error","catch","console","log","FetchWithFilters","results","exportFromJSON","fileName","exportType","types","xls","csv","map","item","Object","values","itemName","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.e140d668.chunk.js","sourcesContent":["export const rows = [\n  \"DOT_NUMBER\",\n  \"LEGAL_NAME\",\n  \"DBA_NAME\",\n  \"CARRIER_OPERATION\",\n  \"HM_FLAG\",\n  \"PC_FLAG\",\n  \"PHY_STREET\",\n  \"PHY_CITY\",\n  \"PHY_STATE\",\n  \"PHY_ZIP\",\n  \"PHY_COUNTRY\",\n  \"MAILING_STREET\",\n  \"MAILING_CITY\",\n  \"MAILING_STATE\",\n  \"MAILING_ZIP\",\n  \"MAILING_COUNTRY\",\n  \"TELEPHONE\",\n  \"FAX\",\n  \"EMAIL_ADDRESS\",\n  \"MCS150_DATE\",\n  \"MCS150_MILEAGE\",\n  \"MCS150_MILEAGE_YEAR\",\n  \"ADD_DATE\",\n  \"OIC_STATE\",\n  \"NBR_POWER_UNIT\",\n  \"DRIVER_TOTAL\"\n]\nexport const data = [{\n  \"DOT_NUMBER\": \"DOT_NUMBER\",\n  \"LEGAL_NAME\": \"LEGAL_NAME\",\n  \"DBA_NAME\": \"DBA_NAME\",\n  \"CARRIER_OPERATION\": \"CARRIER_OPERATION\",\n  \"HM_FLAG\": \"HM_FLAG\",\n  \"PC_FLAG\": \"PC_FLAG\",\n  \"PHY_STREET\": \"PHY_STREET\",\n  \"PHY_CITY\": \"PHY_CITY\",\n  \"PHY_STATE\": \"PHY_STATE\",\n  \"PHY_ZIP\": \"PHY_ZIP\",\n  \"PHY_COUNTRY\": \"PHY_COUNTRY\",\n  \"MAILING_STREET\": \"MAILING_STREET\",\n  \"MAILING_CITY\": \"MAILING_CITY\",\n  \"MAILING_STATE\": \"MAILING_STATE\",\n  \"MAILING_ZIP\": \"MAILING_ZIP\",\n  \"MAILING_COUNTRY\": \"MAILING_COUNTRY\",\n  \"TELEPHONE\": \"TELEPHONE\",\n  \"FAX\": \"FAX\",\n  \"EMAIL_ADDRESS\": \"EMAIL_ADDRESS\",\n  \"MCS150_DATE\": \"MCS150_DATE\",\n  \"MCS150_MILEAGE\": \"MCS150_MILEAGE\",\n  \"MCS150_MILEAGE_YEAR\": \"MCS150_MILEAGE_YEAR\",\n  \"ADD_DATE\": \"ADD_DATE\",\n  \"OIC_STATE\": \"OIC_STATE\",\n  \"NBR_POWER_UNIT\": \"NBR_POWER_UNIT\",\n  \"DRIVER_TOTAL\": \"DRIVER_TOTAL\",\n}]\n\nexport const SSD = {\n  id:\"765afdtsbjh\",\n  name: \"Effects of Social Media\",\n  status: \"complete\", // or \"in-progress\"\n  responded: 20,\n  description: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clitaLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet\",\n  answers: [\n      {\n          questionText:\"Who is the thiccest of them all?\",\n          questionId:\"ahsgd8217\",\n          questionType:\"choice\",\n          choiceId:\"1d82ahsg17\",\n          ansText:\"\",\n      },\n      {\n          questionText:\"Who is the fastest of them all?\",\n          questionId:\"ahsgd8217\",\n          questionType:\"choice\",\n          choiceId:\"2ahsd82g17\",\n          ansText:\"\",\n      },\n      {\n          questionText:\"Who is the fairest of them all?\",\n          questionId:\"gd8ahs217\",\n          questionType:\"text-field\",\n          choiceId:null,\n          ansText:\"Lorem\",\n      },\n      {\n          questionText:\"Who is the dumbest of them all?\",\n          questionId:\"gd8ahs217\",\n          questionType:\"text-field\",\n          choiceId:null,\n          ansText:\"Ipsum\",\n      },\n\n  ]\n}","export default {\n  baseURL: \"http://localhost:4024/graphql\"\n}","import { IFilterOptions } from \"./content.types\"\n\nexport const FetchWithFiltersBody = ({ ADD_DATE, CARRIER_OPERATION, DRIVER_TOTAL, NBR_POWER_UNIT, PC_FLAG, PHY_STATE, PAGE_NUMBER }: IFilterOptions) => ({\n  query: `{\n    fetchWithFilters(input: {\n        ADD_DATE: { to: \"${ADD_DATE.to}\", from: \"${ADD_DATE.from}\" }\n        NBR_POWER_UNIT: ${NBR_POWER_UNIT}\n        DRIVER_TOTAL: ${DRIVER_TOTAL}\n        PHY_STATE: \"${PHY_STATE}\",\n        PC_FLAG: \"${PC_FLAG}\",\n        CARRIER_OPERATION: \"${CARRIER_OPERATION}\",\n        PAGE_NUMBER: ${PAGE_NUMBER},\n    }) {\n        count\n        results {\n            DOT_NUMBER\n            LEGAL_NAME\n            DBA_NAME\n            CARRIER_OPERATION\n            HM_FLAG\n            PC_FLAG\n            PHY_STREET\n            PHY_CITY\n            PHY_STATE\n            PHY_ZIP\n            PHY_COUNTRY\n            MAILING_STREET\n            MAILING_CITY\n            MAILING_STATE\n            MAILING_ZIP\n            MAILING_COUNTRY\n            TELEPHONE\n            FAX\n            EMAIL_ADDRESS\n            MCS150_DATE\n            MCS150_MILEAGE\n            MCS150_MILEAGE_YEAR\n            ADD_DATE\n            OIC_STATE\n            NBR_POWER_UNIT\n            DRIVER_TOTAL\n        }\n    }\n}`\n})\n\nexport const FetchWithFiltersTag = \"fetchWithFilters\"","import React, { useState } from \"react\";\nimport { Button, FormControl, FormGroup, Row, Table } from \"react-bootstrap\";\nimport { rows, data, SSD } from \"./data\";\nimport { FetchWithFilters, IContentDoc } from \"./actions\";\nimport { IResult } from \"./constants/interfaces\";\nimport exportFromJSON from \"export-from-json\";\n\nexport default () => {\n  const [state, setState] = useState({\n    startDate: \"21-JAN-02\",\n    endDate: \"22-JAN-02\",\n    NBR_POWER_UNIT: 1,\n    DRIVER_TOTAL: 1,\n    PHY_STATE: \"CO\",\n    PC_FLAG: \"N\",\n    CARRIER_OPERATION: \"C\",\n  });\n  const [PAGE_NUMBER, setPageNumber] = useState(1);\n  const [responseData, setResponseData] = useState<IContentDoc[]>([]);\n  const handleSubmit = () => {\n    const {\n      CARRIER_OPERATION,\n      DRIVER_TOTAL,\n      NBR_POWER_UNIT,\n      PC_FLAG,\n      PHY_STATE,\n      endDate,\n      startDate,\n    } = state;\n    FetchWithFilters(\n      {\n        ADD_DATE: { from: startDate, to: endDate },\n        CARRIER_OPERATION,\n        DRIVER_TOTAL,\n        NBR_POWER_UNIT,\n        PC_FLAG,\n        PHY_STATE,\n        PAGE_NUMBER: Number(PAGE_NUMBER),\n      },\n      (err: any, data: IResult<IContentDoc>) => {\n        if (err) console.log(\"Error occured\", err);\n        else {\n          console.log(\"here\", data);\n          setResponseData(data.results);\n        }\n        return null;\n      }\n    );\n  };\n\n  function csvHandler() {\n    exportFromJSON({\n      data: responseData,\n      fileName: \"report-01\",\n      exportType: exportFromJSON.types.csv,\n    });\n  }\n\n  function exlHandler() {\n    exportFromJSON({\n      data: responseData,\n      fileName: \"report-01\",\n      exportType: exportFromJSON.types.xls,\n    });\n  }\n\n  return (\n    <body>\n      <div className=\"filterOptions\">\n        <div>\n          <label>Date Range</label>\n          <div>\n            <input\n              placeholder=\"Start Date\"\n              type=\"date\"\n              onChange={({ currentTarget: { value } }) =>\n                setState({ ...state, startDate: value })\n              }\n            />\n            <input\n              placeholder=\"End Date\"\n              type=\"date\"\n              onChange={({ currentTarget: { value } }) =>\n                setState({ ...state, endDate: value })\n              }\n            />\n          </div>\n        </div>\n        <div>\n          <label>NBR_POWER_UNIT</label>\n          <input\n            type=\"number\"\n            onChange={({ currentTarget: { value } }) =>\n              setState({ ...state, NBR_POWER_UNIT: Number(value) })\n            }\n          />\n        </div>\n        <div>\n          <label>DRIVER_TOTAL</label>\n          <input\n            type=\"number\"\n            onChange={({ currentTarget: { value } }) =>\n              setState({ ...state, DRIVER_TOTAL: Number(value) })\n            }\n          />\n        </div>\n        <div>\n          <label>PHY_STATE</label>\n          <input\n            onChange={({ currentTarget: { value } }) =>\n              setState({ ...state, PHY_STATE: value })\n            }\n          />\n        </div>\n        <div>\n          <label>PC_FLAG</label>\n          <input\n            onChange={({ currentTarget: { value } }) =>\n              setState({ ...state, PC_FLAG: value })\n            }\n          />\n        </div>\n        <div>\n          <label>CARRIER_OPERATION</label>\n          <input\n            onChange={({ currentTarget: { value } }) =>\n              setState({ ...state, CARRIER_OPERATION: value })\n            }\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"filterButtons\">\n        <div>\n          <button onClick={handleSubmit}>Search</button>\n        </div>\n        <div>\n          <button onClick={exlHandler}>Export to Excel</button>\n          <button onClick={csvHandler}>Export to CSV</button>\n        </div>\n      </div>\n\n      <div className=\"results\">\n        <table>\n          <thead>\n            <tr>\n              {rows.map((item) => (\n                <td>\n                  <strong>{item}</strong>\n                </td>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {responseData.map((item) => (\n              <tr>\n                {Object.values(item).map((itemName) => (\n                  <td>{itemName}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"paginationButtons\">\n        <button>Previous</button> <button>Next</button>\n      </div>\n    </body>\n  );\n};\n","import Axios from \"axios\"\nimport endPoints from \"./constants/endPoints\"\nimport {\n  FetchWithFiltersBody, FetchWithFiltersTag\n} from \"./Query\"\nimport { IFilterOptions, IContentDoc } from \"./content.types\"\n\nexport type { IContentDoc }\n\nexport const FetchWithFilters = ({ ADD_DATE, PHY_STATE, PC_FLAG, CARRIER_OPERATION, NBR_POWER_UNIT, DRIVER_TOTAL, PAGE_NUMBER }: IFilterOptions, callback = (err: any, data: any) => null) => {\n  Axios.post(endPoints.baseURL, FetchWithFiltersBody({ ADD_DATE, PHY_STATE, PC_FLAG, CARRIER_OPERATION, NBR_POWER_UNIT, DRIVER_TOTAL, PAGE_NUMBER }))\n    .then(res => {\n      if (res.data.data[FetchWithFiltersTag].error) {\n        callback(res.data.data[FetchWithFiltersTag].error, null)\n      } else {\n        callback(null, res.data.data[FetchWithFiltersTag])\n      }\n    })\n    .catch(err => console.log(\"Error\", err))\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\"\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}